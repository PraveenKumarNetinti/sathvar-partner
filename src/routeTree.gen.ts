/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SettingsRouteImport } from './routes/settings/route'
import { Route as authRouteImport } from './routes/(auth)/route'
import { Route as IndexImport } from './routes/index'
import { Route as SettingsWorkingHoursImport } from './routes/settings/working-hours'
import { Route as SettingsUserManagementImport } from './routes/settings/user-management'
import { Route as SettingsRoleManagementImport } from './routes/settings/role-management'
import { Route as SettingsOrganisationDetailsImport } from './routes/settings/organisation-details'
import { Route as SettingsOperationalDetailsImport } from './routes/settings/operational-details'
import { Route as SettingsHolidaysImport } from './routes/settings/holidays'
import { Route as SettingsContactDetailsImport } from './routes/settings/contact-details'
import { Route as SettingsBankDetailsImport } from './routes/settings/bank-details'
import { Route as SettingsAttachmentsImport } from './routes/settings/attachments'
import { Route as mainwithSidebarRouteImport } from './routes/(main)/(with-sidebar)/route'
import { Route as authLoginIndexImport } from './routes/(auth)/login/index'
import { Route as mainwithSidebarServicesImport } from './routes/(main)/(with-sidebar)/services'
import { Route as mainwithSidebarOrdersImport } from './routes/(main)/(with-sidebar)/orders'
import { Route as mainwithSidebarDashboardImport } from './routes/(main)/(with-sidebar)/dashboard'
import { Route as authLoginOtpImport } from './routes/(auth)/login/otp'

// Create/Update Routes

const SettingsRouteRoute = SettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any)

const authRouteRoute = authRouteImport.update({
  id: '/(auth)',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SettingsWorkingHoursRoute = SettingsWorkingHoursImport.update({
  id: '/working-hours',
  path: '/working-hours',
  getParentRoute: () => SettingsRouteRoute,
} as any)

const SettingsUserManagementRoute = SettingsUserManagementImport.update({
  id: '/user-management',
  path: '/user-management',
  getParentRoute: () => SettingsRouteRoute,
} as any)

const SettingsRoleManagementRoute = SettingsRoleManagementImport.update({
  id: '/role-management',
  path: '/role-management',
  getParentRoute: () => SettingsRouteRoute,
} as any)

const SettingsOrganisationDetailsRoute =
  SettingsOrganisationDetailsImport.update({
    id: '/organisation-details',
    path: '/organisation-details',
    getParentRoute: () => SettingsRouteRoute,
  } as any)

const SettingsOperationalDetailsRoute = SettingsOperationalDetailsImport.update(
  {
    id: '/operational-details',
    path: '/operational-details',
    getParentRoute: () => SettingsRouteRoute,
  } as any,
)

const SettingsHolidaysRoute = SettingsHolidaysImport.update({
  id: '/holidays',
  path: '/holidays',
  getParentRoute: () => SettingsRouteRoute,
} as any)

const SettingsContactDetailsRoute = SettingsContactDetailsImport.update({
  id: '/contact-details',
  path: '/contact-details',
  getParentRoute: () => SettingsRouteRoute,
} as any)

const SettingsBankDetailsRoute = SettingsBankDetailsImport.update({
  id: '/bank-details',
  path: '/bank-details',
  getParentRoute: () => SettingsRouteRoute,
} as any)

const SettingsAttachmentsRoute = SettingsAttachmentsImport.update({
  id: '/attachments',
  path: '/attachments',
  getParentRoute: () => SettingsRouteRoute,
} as any)

const mainwithSidebarRouteRoute = mainwithSidebarRouteImport.update({
  id: '/(main)/(with-sidebar)',
  getParentRoute: () => rootRoute,
} as any)

const authLoginIndexRoute = authLoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => authRouteRoute,
} as any)

const mainwithSidebarServicesRoute = mainwithSidebarServicesImport.update({
  id: '/services',
  path: '/services',
  getParentRoute: () => mainwithSidebarRouteRoute,
} as any)

const mainwithSidebarOrdersRoute = mainwithSidebarOrdersImport.update({
  id: '/orders',
  path: '/orders',
  getParentRoute: () => mainwithSidebarRouteRoute,
} as any)

const mainwithSidebarDashboardRoute = mainwithSidebarDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => mainwithSidebarRouteRoute,
} as any)

const authLoginOtpRoute = authLoginOtpImport.update({
  id: '/login/otp',
  path: '/login/otp',
  getParentRoute: () => authRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/(auth)': {
      id: '/(auth)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authRouteImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsRouteImport
      parentRoute: typeof rootRoute
    }
    '/(main)/(with-sidebar)': {
      id: '/(main)/(with-sidebar)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof mainwithSidebarRouteImport
      parentRoute: typeof rootRoute
    }
    '/settings/attachments': {
      id: '/settings/attachments'
      path: '/attachments'
      fullPath: '/settings/attachments'
      preLoaderRoute: typeof SettingsAttachmentsImport
      parentRoute: typeof SettingsRouteImport
    }
    '/settings/bank-details': {
      id: '/settings/bank-details'
      path: '/bank-details'
      fullPath: '/settings/bank-details'
      preLoaderRoute: typeof SettingsBankDetailsImport
      parentRoute: typeof SettingsRouteImport
    }
    '/settings/contact-details': {
      id: '/settings/contact-details'
      path: '/contact-details'
      fullPath: '/settings/contact-details'
      preLoaderRoute: typeof SettingsContactDetailsImport
      parentRoute: typeof SettingsRouteImport
    }
    '/settings/holidays': {
      id: '/settings/holidays'
      path: '/holidays'
      fullPath: '/settings/holidays'
      preLoaderRoute: typeof SettingsHolidaysImport
      parentRoute: typeof SettingsRouteImport
    }
    '/settings/operational-details': {
      id: '/settings/operational-details'
      path: '/operational-details'
      fullPath: '/settings/operational-details'
      preLoaderRoute: typeof SettingsOperationalDetailsImport
      parentRoute: typeof SettingsRouteImport
    }
    '/settings/organisation-details': {
      id: '/settings/organisation-details'
      path: '/organisation-details'
      fullPath: '/settings/organisation-details'
      preLoaderRoute: typeof SettingsOrganisationDetailsImport
      parentRoute: typeof SettingsRouteImport
    }
    '/settings/role-management': {
      id: '/settings/role-management'
      path: '/role-management'
      fullPath: '/settings/role-management'
      preLoaderRoute: typeof SettingsRoleManagementImport
      parentRoute: typeof SettingsRouteImport
    }
    '/settings/user-management': {
      id: '/settings/user-management'
      path: '/user-management'
      fullPath: '/settings/user-management'
      preLoaderRoute: typeof SettingsUserManagementImport
      parentRoute: typeof SettingsRouteImport
    }
    '/settings/working-hours': {
      id: '/settings/working-hours'
      path: '/working-hours'
      fullPath: '/settings/working-hours'
      preLoaderRoute: typeof SettingsWorkingHoursImport
      parentRoute: typeof SettingsRouteImport
    }
    '/(auth)/login/otp': {
      id: '/(auth)/login/otp'
      path: '/login/otp'
      fullPath: '/login/otp'
      preLoaderRoute: typeof authLoginOtpImport
      parentRoute: typeof authRouteImport
    }
    '/(main)/(with-sidebar)/dashboard': {
      id: '/(main)/(with-sidebar)/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof mainwithSidebarDashboardImport
      parentRoute: typeof mainwithSidebarRouteImport
    }
    '/(main)/(with-sidebar)/orders': {
      id: '/(main)/(with-sidebar)/orders'
      path: '/orders'
      fullPath: '/orders'
      preLoaderRoute: typeof mainwithSidebarOrdersImport
      parentRoute: typeof mainwithSidebarRouteImport
    }
    '/(main)/(with-sidebar)/services': {
      id: '/(main)/(with-sidebar)/services'
      path: '/services'
      fullPath: '/services'
      preLoaderRoute: typeof mainwithSidebarServicesImport
      parentRoute: typeof mainwithSidebarRouteImport
    }
    '/(auth)/login/': {
      id: '/(auth)/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginIndexImport
      parentRoute: typeof authRouteImport
    }
  }
}

// Create and export the route tree

interface authRouteRouteChildren {
  authLoginOtpRoute: typeof authLoginOtpRoute
  authLoginIndexRoute: typeof authLoginIndexRoute
}

const authRouteRouteChildren: authRouteRouteChildren = {
  authLoginOtpRoute: authLoginOtpRoute,
  authLoginIndexRoute: authLoginIndexRoute,
}

const authRouteRouteWithChildren = authRouteRoute._addFileChildren(
  authRouteRouteChildren,
)

interface SettingsRouteRouteChildren {
  SettingsAttachmentsRoute: typeof SettingsAttachmentsRoute
  SettingsBankDetailsRoute: typeof SettingsBankDetailsRoute
  SettingsContactDetailsRoute: typeof SettingsContactDetailsRoute
  SettingsHolidaysRoute: typeof SettingsHolidaysRoute
  SettingsOperationalDetailsRoute: typeof SettingsOperationalDetailsRoute
  SettingsOrganisationDetailsRoute: typeof SettingsOrganisationDetailsRoute
  SettingsRoleManagementRoute: typeof SettingsRoleManagementRoute
  SettingsUserManagementRoute: typeof SettingsUserManagementRoute
  SettingsWorkingHoursRoute: typeof SettingsWorkingHoursRoute
}

const SettingsRouteRouteChildren: SettingsRouteRouteChildren = {
  SettingsAttachmentsRoute: SettingsAttachmentsRoute,
  SettingsBankDetailsRoute: SettingsBankDetailsRoute,
  SettingsContactDetailsRoute: SettingsContactDetailsRoute,
  SettingsHolidaysRoute: SettingsHolidaysRoute,
  SettingsOperationalDetailsRoute: SettingsOperationalDetailsRoute,
  SettingsOrganisationDetailsRoute: SettingsOrganisationDetailsRoute,
  SettingsRoleManagementRoute: SettingsRoleManagementRoute,
  SettingsUserManagementRoute: SettingsUserManagementRoute,
  SettingsWorkingHoursRoute: SettingsWorkingHoursRoute,
}

const SettingsRouteRouteWithChildren = SettingsRouteRoute._addFileChildren(
  SettingsRouteRouteChildren,
)

interface mainwithSidebarRouteRouteChildren {
  mainwithSidebarDashboardRoute: typeof mainwithSidebarDashboardRoute
  mainwithSidebarOrdersRoute: typeof mainwithSidebarOrdersRoute
  mainwithSidebarServicesRoute: typeof mainwithSidebarServicesRoute
}

const mainwithSidebarRouteRouteChildren: mainwithSidebarRouteRouteChildren = {
  mainwithSidebarDashboardRoute: mainwithSidebarDashboardRoute,
  mainwithSidebarOrdersRoute: mainwithSidebarOrdersRoute,
  mainwithSidebarServicesRoute: mainwithSidebarServicesRoute,
}

const mainwithSidebarRouteRouteWithChildren =
  mainwithSidebarRouteRoute._addFileChildren(mainwithSidebarRouteRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof mainwithSidebarRouteRouteWithChildren
  '/settings': typeof SettingsRouteRouteWithChildren
  '/settings/attachments': typeof SettingsAttachmentsRoute
  '/settings/bank-details': typeof SettingsBankDetailsRoute
  '/settings/contact-details': typeof SettingsContactDetailsRoute
  '/settings/holidays': typeof SettingsHolidaysRoute
  '/settings/operational-details': typeof SettingsOperationalDetailsRoute
  '/settings/organisation-details': typeof SettingsOrganisationDetailsRoute
  '/settings/role-management': typeof SettingsRoleManagementRoute
  '/settings/user-management': typeof SettingsUserManagementRoute
  '/settings/working-hours': typeof SettingsWorkingHoursRoute
  '/login/otp': typeof authLoginOtpRoute
  '/dashboard': typeof mainwithSidebarDashboardRoute
  '/orders': typeof mainwithSidebarOrdersRoute
  '/services': typeof mainwithSidebarServicesRoute
  '/login': typeof authLoginIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof mainwithSidebarRouteRouteWithChildren
  '/settings': typeof SettingsRouteRouteWithChildren
  '/settings/attachments': typeof SettingsAttachmentsRoute
  '/settings/bank-details': typeof SettingsBankDetailsRoute
  '/settings/contact-details': typeof SettingsContactDetailsRoute
  '/settings/holidays': typeof SettingsHolidaysRoute
  '/settings/operational-details': typeof SettingsOperationalDetailsRoute
  '/settings/organisation-details': typeof SettingsOrganisationDetailsRoute
  '/settings/role-management': typeof SettingsRoleManagementRoute
  '/settings/user-management': typeof SettingsUserManagementRoute
  '/settings/working-hours': typeof SettingsWorkingHoursRoute
  '/login/otp': typeof authLoginOtpRoute
  '/dashboard': typeof mainwithSidebarDashboardRoute
  '/orders': typeof mainwithSidebarOrdersRoute
  '/services': typeof mainwithSidebarServicesRoute
  '/login': typeof authLoginIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/(auth)': typeof authRouteRouteWithChildren
  '/settings': typeof SettingsRouteRouteWithChildren
  '/(main)/(with-sidebar)': typeof mainwithSidebarRouteRouteWithChildren
  '/settings/attachments': typeof SettingsAttachmentsRoute
  '/settings/bank-details': typeof SettingsBankDetailsRoute
  '/settings/contact-details': typeof SettingsContactDetailsRoute
  '/settings/holidays': typeof SettingsHolidaysRoute
  '/settings/operational-details': typeof SettingsOperationalDetailsRoute
  '/settings/organisation-details': typeof SettingsOrganisationDetailsRoute
  '/settings/role-management': typeof SettingsRoleManagementRoute
  '/settings/user-management': typeof SettingsUserManagementRoute
  '/settings/working-hours': typeof SettingsWorkingHoursRoute
  '/(auth)/login/otp': typeof authLoginOtpRoute
  '/(main)/(with-sidebar)/dashboard': typeof mainwithSidebarDashboardRoute
  '/(main)/(with-sidebar)/orders': typeof mainwithSidebarOrdersRoute
  '/(main)/(with-sidebar)/services': typeof mainwithSidebarServicesRoute
  '/(auth)/login/': typeof authLoginIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/settings'
    | '/settings/attachments'
    | '/settings/bank-details'
    | '/settings/contact-details'
    | '/settings/holidays'
    | '/settings/operational-details'
    | '/settings/organisation-details'
    | '/settings/role-management'
    | '/settings/user-management'
    | '/settings/working-hours'
    | '/login/otp'
    | '/dashboard'
    | '/orders'
    | '/services'
    | '/login'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/settings'
    | '/settings/attachments'
    | '/settings/bank-details'
    | '/settings/contact-details'
    | '/settings/holidays'
    | '/settings/operational-details'
    | '/settings/organisation-details'
    | '/settings/role-management'
    | '/settings/user-management'
    | '/settings/working-hours'
    | '/login/otp'
    | '/dashboard'
    | '/orders'
    | '/services'
    | '/login'
  id:
    | '__root__'
    | '/'
    | '/(auth)'
    | '/settings'
    | '/(main)/(with-sidebar)'
    | '/settings/attachments'
    | '/settings/bank-details'
    | '/settings/contact-details'
    | '/settings/holidays'
    | '/settings/operational-details'
    | '/settings/organisation-details'
    | '/settings/role-management'
    | '/settings/user-management'
    | '/settings/working-hours'
    | '/(auth)/login/otp'
    | '/(main)/(with-sidebar)/dashboard'
    | '/(main)/(with-sidebar)/orders'
    | '/(main)/(with-sidebar)/services'
    | '/(auth)/login/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  authRouteRoute: typeof authRouteRouteWithChildren
  SettingsRouteRoute: typeof SettingsRouteRouteWithChildren
  mainwithSidebarRouteRoute: typeof mainwithSidebarRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  authRouteRoute: authRouteRouteWithChildren,
  SettingsRouteRoute: SettingsRouteRouteWithChildren,
  mainwithSidebarRouteRoute: mainwithSidebarRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/(auth)",
        "/settings",
        "/(main)/(with-sidebar)"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/(auth)": {
      "filePath": "(auth)/route.tsx",
      "children": [
        "/(auth)/login/otp",
        "/(auth)/login/"
      ]
    },
    "/settings": {
      "filePath": "settings/route.tsx",
      "children": [
        "/settings/attachments",
        "/settings/bank-details",
        "/settings/contact-details",
        "/settings/holidays",
        "/settings/operational-details",
        "/settings/organisation-details",
        "/settings/role-management",
        "/settings/user-management",
        "/settings/working-hours"
      ]
    },
    "/(main)/(with-sidebar)": {
      "filePath": "(main)/(with-sidebar)/route.tsx",
      "children": [
        "/(main)/(with-sidebar)/dashboard",
        "/(main)/(with-sidebar)/orders",
        "/(main)/(with-sidebar)/services"
      ]
    },
    "/settings/attachments": {
      "filePath": "settings/attachments.tsx",
      "parent": "/settings"
    },
    "/settings/bank-details": {
      "filePath": "settings/bank-details.tsx",
      "parent": "/settings"
    },
    "/settings/contact-details": {
      "filePath": "settings/contact-details.tsx",
      "parent": "/settings"
    },
    "/settings/holidays": {
      "filePath": "settings/holidays.tsx",
      "parent": "/settings"
    },
    "/settings/operational-details": {
      "filePath": "settings/operational-details.tsx",
      "parent": "/settings"
    },
    "/settings/organisation-details": {
      "filePath": "settings/organisation-details.tsx",
      "parent": "/settings"
    },
    "/settings/role-management": {
      "filePath": "settings/role-management.tsx",
      "parent": "/settings"
    },
    "/settings/user-management": {
      "filePath": "settings/user-management.tsx",
      "parent": "/settings"
    },
    "/settings/working-hours": {
      "filePath": "settings/working-hours.tsx",
      "parent": "/settings"
    },
    "/(auth)/login/otp": {
      "filePath": "(auth)/login/otp.tsx",
      "parent": "/(auth)"
    },
    "/(main)/(with-sidebar)/dashboard": {
      "filePath": "(main)/(with-sidebar)/dashboard.tsx",
      "parent": "/(main)/(with-sidebar)"
    },
    "/(main)/(with-sidebar)/orders": {
      "filePath": "(main)/(with-sidebar)/orders.tsx",
      "parent": "/(main)/(with-sidebar)"
    },
    "/(main)/(with-sidebar)/services": {
      "filePath": "(main)/(with-sidebar)/services.tsx",
      "parent": "/(main)/(with-sidebar)"
    },
    "/(auth)/login/": {
      "filePath": "(auth)/login/index.tsx",
      "parent": "/(auth)"
    }
  }
}
ROUTE_MANIFEST_END */
